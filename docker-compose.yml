version: "3.8"

services:
  traefik:
    deploy:
      labels:
        traefik.docker.network: "traefik-benlab"
        traefik.enable: "true"
        #traefik.http.routers.traefik.rule: Host(`traefik.localhost`)" #remplacer par la config dynamique
        #traefik.http.routers.traefik.entrypoints: "http" #remplacer par la config dynamique
        #traefik.http.routers.traefik.service: "api@internal" #remplacer par la config dynamique

    image: "traefik:v2.8.1" #"traefik:latest"
    networks:
      - traefik-benlab
    container_name: "traefik"
    restart: unless-stopped #cela permet que le conteneur ne se lance pas à l'éxécution de docker desktop si le service est arrêté.
    command: 
      - "--log.level=DEBUG"

      # Les commandes dessous permette de bypass le ficher traefik.yml
      #- "--api.insecure=true" #accés au dashboard
      #- "--providers.docker=true" #déclaration de docker pour le backend (docker provider)
      #- "--providers.docker.exposedbydefault=false"
      #- "--entrypoints.web.address=:80" #point d'entrée http
      
    ports:
      - "80:80"
      - "8181:8080" 
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config_dynamique/:/etc/traefik/config_dynamique/:ro" #dossier des configs dynamiques
      - "./traefik.yml:/etc/traefik/traefik.yml:ro" #config static ne sera pas uti
  

  whoami1:
    image: "containous/whoami"
    networks: 
      - traefik-benlab
    container_name: "whoami1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami1.rule=Host(`first.localhost`)"  #déclaration du nom pour le reférencement DNS
      - "traefik.http.routers.whoami1.entrypoints=web" #Point d'entrée pour la rédirection

  whoami2:
    image: "containous/whoami"
    networks: 
      - traefik-benlab
    container_name: "whoami2"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami2.rule=Host(`second.localhost`)" 
      - "traefik.http.routers.whoami2.entrypoints=web"

networks:
  traefik-benlab:


